const express = require('express'),
bodyParser = require('body-parser'),
morgan = require('morgan'),
path = require('path'),<% if(optionalsFeatures.cors) {%>
cors = require('cors'),<%}%>
config = require('./config'),
routes = require('./app/routes'),
errors = require('./app/middlewares/errors'),
DEFAULT_BODY_SIZE_LIMIT = 1024 * 1024 * 10,
DEFAULT_PARAMETER_LIMIT = 10000;

const bodyParserJsonConfig = () => ({
parameterLimit: config.common.api.parameterLimit || DEFAULT_PARAMETER_LIMIT,
limit: config.common.api.bodySizeLimit || DEFAULT_BODY_SIZE_LIMIT
});

const bodyParserUrlencodedConfig = () => ({
extended: true,
parameterLimit: config.common.api.parameterLimit || DEFAULT_PARAMETER_LIMIT,
limit: config.common.api.bodySizeLimit || DEFAULT_BODY_SIZE_LIMIT
});

const app = express();
<% if(optionalsFeatures.cors) {%>
app.use(cors());<%}%>

app.use('/docs', express.static(path.join(__dirname, 'docs')));

// Client must send "Content-Type: application/json" header
app.use(bodyParser.json(bodyParserJsonConfig()));
app.use(bodyParser.urlencoded(bodyParserUrlencodedConfig()));

if (!config.isTesting) {
morgan.token('req-params', req => req.params);
app.use(
  morgan(
    '[:date[clf]] :remote-addr - Request ":method :url" with params: :req-params. Response status: :status.'
  )
);
}

routes.init(app);

app.use(errors.handle);

module.exports = app;
