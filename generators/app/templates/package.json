{
  "name": "<%= projectName %>",
  "version": "0.1.0",
  "description": "<%= projectDescription %>",
  "engines": {
    "node": "<%= nodeVersion %>",
    "npm": "<%= npmVersion %>"
  },
  "scripts": {
    "console": "node console.js",<% if(testing === 'mocha-chai') {%>
    "cover": "NODE_ENV=testing istanbul cover ./node_modules/mocha/bin/_mocha  test/app.spec.js",
    "test": "NODE_ENV=testing ./node_modules/mocha/bin/_mocha --timeout 6000 --exit test/app.spec.js",
    "test-inspect": "NODE_ENV=testing node --inspect-brk ./node_modules/mocha/bin/_mocha test/app.spec.js",<%} if(testing === 'jest-supertest') {%>
    "cover": "npm run test -- --coverage",
    "test": "NODE_ENV=testing jest --runInBand --forceExit --detectOpenHandles",
    "test-inspect": "NODE_ENV=testing node --inspect --debug-brk jest",<%} if(optionalsFeatures.coveralls) {%>
    "coveralls": "npm run cover -- --report lcovonly && cat ./coverage/lcov.info | coveralls",<%}%>
    "eslint-check": "eslint --print-config .eslintrc.js --ignore-pattern ./.eslintrc.js | eslint-config-prettier-check",
    "lint": "eslint \"**/*.js\" --ignore-pattern ./.eslintrc.js",
    "lint-diff": "git diff --diff-filter=ACM --name-only --cached --relative | grep \\\\.js$ | xargs eslint",
    "lint-fix": "npm run lint -- --fix",
    "outdated": "npm outdated --depth 0",
    "pretest": "npm run lint",
    "start-dev": "nodemon --inspect server.js",
    "prestart-dev": "npm run lint",<% if(database && orm.sequelize) {%>
    "migrations": "sequelize db:migrate",<% if(!inTraining) {%>
    "migrations-test": "NODE_ENV=testing sequelize db:migrate",<%}}%>
    "start": "node server.js",
    "seed": "sequelize db:seed:all",
    "create-seed": "sequelize seed:generate --name"
  },
  "cacheDirectories": [
    "node_modules"
  ],
  "main": "app.js",
  "author": "Wolox",
  "homepage": "<%= urlRepository %>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "<%= urlRepository %>.git"
  },
  "bugs": {
    "url": "<%= urlRepository %>/issues",
    "email": "tls@wolox.com.ar"
  },<% if(testing === 'jest-supertest') {%>
  "jest": {
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "collectCoverageFrom": [
      "**/*.js",
      "!**/console.js",
      "!**/node_modules/**",
      "!**/build/**",
      "!**/migrations/**",
      "!**/config/**",
      "!**/scripts/**"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/test/setup.js"
    ],
    "testEnvironment": "node",
    "transform": {
      "^.+\\.js$": "babel-jest"
    }
  },<%}%>
  "dependencies": {
    "bcryptjs": "<%= bcryptjsVersion %>",<% if(database && orm.mongoose){%>
    "mongoose": "<%= mongooseVersion %>",<%} if(database && orm.mongoose && mongooseDialect === 'mongoDB') {%>
    "mongodb" : "<%= mongodbVersion %>", <%}%>
    "body-parser": "<%= bodyParserVersion %>",<% if(optionalsFeatures.cors) {%>
    "cors": "<%= corsVersion %>",<%}%>
    "express": "<%= expressVersion %>",<% if(optionalsFeatures.helmet) {%>
    "helmet": "<%= helmetVersion %>",<%
    }%>
    "jwt-simple": "<%= jwtSimpleVersion %>",<% if(optionalsFeatures.rollbar) {%>
    "rollbar": "<%= rollbarVersion %>",<%} if(database && orm.sequelize) {%>
    "sequelize": "<%= sequelizeVersion %>",<%} if(database && orm.sequelize && testing === 'jest-supertest') {%>
    "factory-girl": "<%= factoryGirlVersion %>",<%} if(database && orm.sequelize && sequelizeDialect === 'postgres') {%>
    "pg": "<%= pgVersion %>",<%} if(database && orm.sequelize && sequelizeDialect === 'mysql') {%>
    "mysql2": "<%= mysql2Version %>",<%} if(database && orm.sequelize && sequelizeDialect === 'sqlite') {%>
    "sqlite3": "<%= sqlite3Version %>",<%} if(database && orm.sequelize && sequelizeDialect === 'mssql') {%>
    "tedious": "<%= tediousVersion %>",<%}%>
    "umzug": "<%= umzugVersion %>",
    "express-wolox-logger": "<%= expressWoloxLoggerVersion %>",
    "axios": "<%= axiosVersion %>",
    "swagger-ui-express": "<%= swaggerUiExpressVersion %>"
  },
  "devDependencies": {
    "babel": "<%= babelVersion %>",
    "babel-core": "<%= babelCoreVersion %>",
    "babel-eslint": "<%= babelEslintVersion %>",<% if(testing === 'jest-supertest') {%>
    "babel-jest": "<%= babelJestVersion %>",
    "jest": "<%= jestVersion %>",
    "supertest": "<%= supertestVersion %>",<%}%>
    "babel-preset-es2015": "<%= babelPresetEs2015Version %>",<% if(testing === 'mocha-chai') {%>
    "chai": "<%= chaiVersion %>",
    "chai-http": "<%= chaiHttpVersion %>",<%} if(optionalsFeatures.coveralls) {%>
    "coveralls": "<%= coverallsVersion %>",<%}%>
    "dotenv": "<%= dotenvVersion %>",
    "eslint": "<%= eslintVersion %>",
    "eslint-config-wolox": "<%= eslintConfigWoloxVersion %>",
    "eslint-config-wolox-node": "<%= eslintConfigWoloxNodeVersion %>",
    "eslint-plugin-import": "<%= eslintPluginImportVersion %>",
    "eslint-plugin-prettier": "<%= eslintPluginPrettierVersion %>",
    "husky": "<%= huskyVersion %>",
    "istanbul": "<%= istanbulVersion %>",
    "mocha": "<%= mochaVersion %>",
    "mocha-lcov-reporter": "<%= mochaLcovReporterVersion %>",
    "nodemon": "<%= nodemonVersion %>",
    "prettier": "<%= prettierVersion %>",
    "prettier-eslint": "<%= prettierEslintVersion %>",<% if(database && orm.sequelize) {%>
    "sequelize-cli": "<%= sequelizeCliVersion %>",<%}%>
    "prompt": "<%= promptVersion %>"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint-diff",
      "pre-push": "npm test"
    }
  }
}
