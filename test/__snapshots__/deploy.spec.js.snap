// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Deploy with aws creates expected .ebextensions/cloudwatch.config 1`] = `
"packages:
  yum:
    perl-DateTime: []
    perl-Sys-Syslog: []
    perl-LWP-Protocol-https: []
    perl-Switch: []
    perl-URI: []
    perl-Bundle-LWP: []
sources: 
  /opt/cloudwatch: https://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip

container_commands:
  01-setupcron:
    command: |
      echo '*/5 * * * * root perl /opt/cloudwatch/aws-scripts-mon/mon-put-instance-data.pl \`{\\"Fn::GetOptionSetting\\" : { \\"OptionName\\" : \\"CloudWatchMetrics\\", \\"DefaultValue\\" : \\"--mem-util --disk-space-util --disk-path=/\\" }}\` >> /var/log/cwpump.log 2>&1' > /etc/cron.d/cwpump
  02-changeperm:
    command: chmod 644 /etc/cron.d/cwpump
  03-changeperm:
    command: chmod u+x /opt/cloudwatch/aws-scripts-mon/mon-put-instance-data.pl
option_settings:
  \\"aws:autoscaling:launchconfiguration\\" :
    IamInstanceProfile : \\"aws-elasticbeanstalk-ec2-role\\"
  \\"aws:elasticbeanstalk:customoption\\" :
    CloudWatchMetrics : \\"--mem-util --mem-used --mem-avail --disk-space-util --disk-space-used --disk-space-avail --disk-path=/ --auto-scaling\\"
"
`;

exports[`Deploy with docker and aws creates expected .ebextensions/cloudwatch.config 1`] = `
"packages:
  yum:
    perl-DateTime: []
    perl-Sys-Syslog: []
    perl-LWP-Protocol-https: []
    perl-Switch: []
    perl-URI: []
    perl-Bundle-LWP: []
sources: 
  /opt/cloudwatch: https://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip

container_commands:
  01-setupcron:
    command: |
      echo '*/5 * * * * root perl /opt/cloudwatch/aws-scripts-mon/mon-put-instance-data.pl \`{\\"Fn::GetOptionSetting\\" : { \\"OptionName\\" : \\"CloudWatchMetrics\\", \\"DefaultValue\\" : \\"--mem-util --disk-space-util --disk-path=/\\" }}\` >> /var/log/cwpump.log 2>&1' > /etc/cron.d/cwpump
  02-changeperm:
    command: chmod 644 /etc/cron.d/cwpump
  03-changeperm:
    command: chmod u+x /opt/cloudwatch/aws-scripts-mon/mon-put-instance-data.pl
option_settings:
  \\"aws:autoscaling:launchconfiguration\\" :
    IamInstanceProfile : \\"aws-elasticbeanstalk-ec2-role\\"
  \\"aws:elasticbeanstalk:customoption\\" :
    CloudWatchMetrics : \\"--mem-util --mem-used --mem-avail --disk-space-util --disk-space-used --disk-space-avail --disk-path=/ --auto-scaling\\"
"
`;

exports[`Deploy with docker and aws creates expected Dockerfile 1`] = `
"FROM node:8.9.12

WORKDIR /home/node/app

COPY package.json .
COPY package-lock.json .
COPY .nvmrc .

RUN npm install

COPY . .

EXPOSE 8080
ENV NODE_ENV production
CMD [\\"node\\", \\"server.js\\"]
"
`;

exports[`Deploy with docker and aws creates expected Dockerrun.aws.json 1`] = `
"{
  \\"AWSEBDockerrunVersion\\": \\"1\\",
  \\"Ports\\": [
      {
          \\"ContainerPort\\": \\"8080\\"
      }
  ],
  \\"Volumes\\": [],
  \\"Logging\\": \\"/home/node/app/app/logger/logs\\"
}
"
`;

exports[`Deploy with docker creates expected Dockerfile 1`] = `
"FROM node:8.9.12

WORKDIR /home/node/app

COPY package.json .
COPY package-lock.json .
COPY .nvmrc .

RUN npm install

COPY . .

EXPOSE 8080
ENV NODE_ENV production
CMD [\\"node\\", \\"server.js\\"]
"
`;

exports[`Deploy with heroku creates expected Procfile 1`] = `
"web: node server.js
"
`;
